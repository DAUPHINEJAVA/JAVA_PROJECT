/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servlets;

import EJB.CategorieBeanLocal;
import EJB.ProjetBeanLocal;
import Model.Categorie;
import Model.Projet;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;


/**
 * ProjetServlet est la classe qui gère l’affichage de la galerie des projets.
 * 
 * @author dac
 */
@WebServlet(name = "ProjetServlet", loadOnStartup = 1, urlPatterns = {"/listProjects", "/listCat", "/search"})
public class ProjetServlet extends HttpServlet {

    @EJB
    private ProjetBeanLocal projectBean;
    
    @EJB
    private CategorieBeanLocal categorieBean;
    /**
     * Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        String userPath = request.getServletPath();
        switch (userPath) {
        case "/listProjects":
            //Récupération des paramètres
            String params[] = new String[6];
            params[0] = request.getParameter("cat"); // catégorie
            params[1] = request.getParameter("name"); // nom projet
            params[2] = request.getParameter("language"); // langage de programmation
            params[3] = request.getParameter("licence"); // licence du projet
            params[4] = request.getParameter("min"); // prix minimum
            params[5] = request.getParameter("max"); // prix maximum
            
            request.setAttribute("pageTitle", "Liste des projets");
            List<Projet> projects = projectBean.getProjectsToSell(params);
            request.setAttribute("projects", projects);
            request.setAttribute("categories", categorieBean.getListeCategories());
            request.setAttribute("params", params);
            break; 

         case "/search":
            response.setContentType("application/json;charset=UTF-8");
          PrintWriter out = response.getWriter();
            /* TODO output your page here. You may use following sample code. */
          JSONObject pJson = new JSONObject();
          JSONArray jsonArray = new JSONArray();
          String s =request.getParameter("name");
          for(Projet p:projectBean.getSearchedProjects(s)){
              JSONObject obj = new JSONObject();
              obj.put("id", p.getIdProjet());
              obj.put("name", p.getNomProjet());
              jsonArray.add(obj);
          }
           pJson.put("projets", jsonArray);
          
           out.write(pJson.toString());
            
             return;
         case "/listCat":
            response.setContentType("application/json;charset=UTF-8");
           out = response.getWriter();
            /* TODO output your page here. You may use following sample code. */
          JSONObject catJson = new JSONObject();
           jsonArray = new JSONArray();
          for(Categorie cat:categorieBean.getListeCategories()){
              JSONObject obj = new JSONObject();
              obj.put("id", cat.getIdCat());
              obj.put("name", cat.getNomCategorie());
              jsonArray.add(obj);
          }
           catJson.put("categories", jsonArray);          
           out.write(catJson.toString());            
             return;            
        }
        // use RequestDispatcher to forward request internally
        String url = "/WEB-INF/view" + userPath + ".jsp";
        try {
            request.getRequestDispatcher(url).forward(request, response);
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        String userPath = request.getServletPath();
        switch (userPath) {
        case "/listProjects":
            break;
        }
        // use RequestDispatcher to forward request internally
        String url = "/WEB-INF/view" + userPath + ".jsp";
        try {
            request.getRequestDispatcher(url).forward(request, response);
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
