/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servlets;

import EJB.CategorieBeanLocal;
import EJB.ProjetBeanLocal;
import Model.Projet;
import Model.Utilisateur;
import java.io.IOException;
import java.util.List;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 * AdminServlet est la classe qui gère toutes les actions de l’administrateur (ajout projet, 
 * ajout catégorie, consultation liste des projets, ...)
 * 
 * @author dac
 */
@WebServlet(name = "AdminServlet", loadOnStartup = 1, urlPatterns = {
    "/admin/listProjects",
    "/admin/showProject/*",
    "/admin/editProject/*",
    "/admin/showCategories",
    "/admin/addCategorie"
})
public class AdminServlet extends HttpServlet {

    @EJB
    private ProjetBeanLocal projetBean;

    @EJB
    private CategorieBeanLocal categorieBean;
    

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");

        // check user is admin
        Utilisateur user = null;
        HttpSession session = request.getSession();
        user = (Utilisateur)session.getAttribute("user");
        if ( user == null || !user.getTypeUser().equals("ADMIN") ) {
                response.sendError(401);	// unauthorized
                return;
        }

        String userPath = request.getServletPath();
        switch (userPath) {
            case "/admin/listProjects":
                listProjects(request, response);
                break;
            case "/admin/showProject":
                showProject(request, response);
                break;
            case "/admin/editProject":
                editProject(request, response);
                break;
            case "/admin/showCategories":
                showCategories(request, response);
                break;
            case "/admin/addCategorie":
                addCategorie(request, response);
                break;
            default:
                response.sendError(404);	// not found
        }
    }
    
    /**
     * listProjects() permet de récupérer la liste de tous les projets.
     * 
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException 
     */
    private void listProjects(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {
        List<Projet> projets = projetBean.getAllProjects();
        request.setAttribute("projets", projets);
        getServletContext().getRequestDispatcher("/WEB-INF/admin/listeProjets.jsp").forward(request, response);
    }

    /**
     * showProject permet de récupérer les détails d'un projet.
     * 
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException 
     */
    private void showProject(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {
        int id;
        try {
            id = Integer.parseInt(request.getPathInfo().substring(1));
        }
        catch (Exception e) {
            request.setAttribute("info", "id projet invalide");
            getServletContext().getRequestDispatcher("/index.jsp").forward(request, response);
            return;
        }

        Projet proj = projetBean.getProjet(id);
        if ( proj == null ) {
            request.setAttribute("info", "projet non trouvé");
            getServletContext().getRequestDispatcher("/index.jsp").forward(request, response);
            return;
        }

        request.setAttribute("projet", proj);
        request.setAttribute("dateProjet", (new java.util.Date(proj.getDateAjout())).toString());
        request.setAttribute("listeCategories", categorieBean.getListeCategories());

        getServletContext().getRequestDispatcher("/WEB-INF/admin/editProjet.jsp").forward(request, response);
    }
    
    /**
     * editProject() permet de modifier les informations d'un projet.
     * 
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException 
     */
    private void editProject(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {
        int id;
        try {
            id = Integer.parseInt(request.getPathInfo().substring(1));
        }
        catch (Exception e) {
            request.setAttribute("info", "id projet invalide");
            getServletContext().getRequestDispatcher("/index.jsp").forward(request, response);
            return;
        }
        String nom = request.getParameter("nom");
        String description = request.getParameter("description");
        double prix;
        try {
            prix = Double.parseDouble(request.getParameter("prix"));
        }
        catch (Exception e) {
            request.setAttribute("info", "prix invalide");
            showProject(request, response);
            return;
        }
        int categorie;
        try {
            categorie = Integer.parseInt(request.getParameter("categorie"));
        }
        catch (Exception e) {
            request.setAttribute("info", "catégorie invalide");
            showProject(request, response);
            return;
        }

        String visibilite = request.getParameter("visibilite");

        int res = projetBean.editProjet(id, nom, description, prix, categorie, visibilite);
        switch (res) {
            case 0:
                request.setAttribute("info", "Projet modifié avec succès!");
                break;
            case -1:
                request.setAttribute("info", "Erreur interne du serveur");
                break;
            case 10:
                request.setAttribute("info", "Projet non trouvé");
                break;
            case 20:
                request.setAttribute("info", "Nom de projet invalide");
                break;
            case 21:
                request.setAttribute("info", "Nom de projet déjà utilisé");
                break;
            case 30:
                request.setAttribute("info", "Description invalide");
                break;
            case 40:
                request.setAttribute("info", "Prix impossible");
                break;
            case 50:
                request.setAttribute("info", "Catégorie inconnue");
                break;
            case 60:
                request.setAttribute("info", "Erreur de visibilité");
                break;
            default:
                request.setAttribute("info", "Erreur inconnue");
        }
        showProject(request, response);
    }
    
    /**
     * showCategories() permet de récupérer toutes les catégories existantes.
     * 
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException 
     */
    private void showCategories(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {
        request.setAttribute("categories", categorieBean.getListeCategories());
        getServletContext().getRequestDispatcher("/WEB-INF/admin/ajoutCategorie.jsp").forward(request, response);
    }
    
    /**
     * addCategorie() permet d'ajouter une nouvelle catégorie.
     * 
     * @param request
     * @param response
     * @throws ServletException
     * @throws IOException 
     */
    private void addCategorie(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {
        String nom = request.getParameter("nom");
        String description = request.getParameter("description");

        int res = categorieBean.ajouterCategorie(nom, description);
        switch (res) {
            case 0:
                request.setAttribute("info", "Catégorie ajoutée avec succès!");
                break;
            case -1:
                request.setAttribute("info", "Erreur interne du serveur");
                break;
            case 10:
                request.setAttribute("info", "Nom de catégorie invalide");
                break;
            case 11:
                request.setAttribute("info", "Cette catégorie existe déjà");
                break;
            default:
                request.setAttribute("info", "Erreur inconnue");
        }
        showCategories(request, response);
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
